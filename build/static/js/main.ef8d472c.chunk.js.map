{"version":3,"sources":["redux/authorization/authorization-slice.js","redux/contacts/contacts-reducer.js","redux/store.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","index.js","redux/authorization/authorization-operations.js","redux/authorization/authorization-selectors.js","redux/contacts/contacts-actions.js"],"names":["authSlice","createSlice","name","initialState","user","email","token","isFetchingCurrentUser","isLoggedIn","registerPending","registerError","logInPending","logInError","extraReducers","register","pending","state","fulfilled","action","payload","rejected","logIn","logOut","_","fetchCurrentUser","items","createReducer","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","isLoading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","contacts","contactsReduser","devTools","process","persistor","persistStore","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","useSelector","getIsLoggedIn","to","PrivateRoute","RegisterForm","lazy","LogInForm","ContactsView","App","getIsFetchingCurrentUser","dispatch","useDispatch","useEffect","Box","sx","marginTop","display","justifyContent","CircularProgress","size","color","fallback","path","exact","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","thunkAPI","a","post","response","status","data","rejectWithValue","statusText","message","getState","persistedToken","get","getUserEmail","getLogInPending","getLogInError","getRegisterPending","getRegisterError","createAction"],"mappings":"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","file":"static/js/main.ef8d472c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n} from './authorization-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isFetchingCurrentUser: false,\r\n  isLoggedIn: false,\r\n  registerPending: false,\r\n  registerError: null,\r\n  logInPending: false,\r\n  logInError: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [register.pending](state) {\r\n      state.registerPending = true;\r\n      state.registerError = null;\r\n    },\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.registerPending = false;\r\n    },\r\n    [register.rejected](state, action) {\r\n      state.registerPending = false;\r\n      state.registerError = action.payload;\r\n    },\r\n    [logIn.pending](state) {\r\n      state.logInPending = true;\r\n      state.logInError = null;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.logInPending = false;\r\n    },\r\n    [logIn.rejected](state, action) {\r\n      state.logInPending = false;\r\n      state.logInError = action.payload;\r\n    },\r\n    [logOut.fulfilled](state, _) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isFetchingCurrentUser = false;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authSlice } from './authorization/authorization-slice';\nimport contactsReduser from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authSlice.reducer),\n    contacts: contactsReduser,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/authorization/authorization-selectors';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  restricted: PropTypes.bool,\r\n  redirectTo: PropTypes.string,\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/authorization/authorization-selectors';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  redirectTo: PropTypes.string,\r\n};\r\n","import { useEffect, Suspense, lazy } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PublicRoute from './components/PublicRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport { getIsFetchingCurrentUser } from './redux/authorization/authorization-selectors';\nimport { fetchCurrentUser } from './redux/authorization/authorization-operations';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst RegisterForm = lazy(() =>\n  import(\n    './components/RegisterForm/RegisterForm' /* webpackChunkName: \"register-form\" */\n  ),\n);\nconst LogInForm = lazy(() =>\n  import(\n    './components/LogInForm/LogInForm' /* webpackChunkName: \"log-in-form\" */\n  ),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */),\n);\n\nconst App = () => {\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrentUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isFetchingCurrentUser ? (\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <CircularProgress size={60} />\n          <CircularProgress size={60} color=\"secondary\" />\n        </Box>\n      ) : (\n        <Suspense fallback={<div>Loading</div>}>\n          <Switch>\n            <PublicRoute path=\"/\" exact restricted redirectTo=\"/contacts\">\n              <RegisterForm />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n              <RegisterForm />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LogInForm />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n\n            <Route>\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('/users/signup', credentials);\r\n\r\n      if (response.status === 201) {\r\n        token.set(response.data.token);\r\n        return response.data;\r\n      }\r\n\r\n      return thunkAPI.rejectWithValue(response.statusText);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  'auth/logIn',\r\n  async (credentials, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('users/login', credentials);\r\n\r\n      if (response.status === 200) {\r\n        token.set(response.data.token);\r\n        return response.data;\r\n      }\r\n\r\n      return thunkAPI.rejectWithValue(response.statusText);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logOut = createAsyncThunk('auth/logOut', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {}\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n\r\n    try {\r\n      const { data } = await axios.get('users/current');\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","export const getUserName = state => state.auth.user.name;\r\n\r\nexport const getUserEmail = state => state.auth.user.email;\r\n\r\nexport const getIsFetchingCurrentUser = state =>\r\n  state.auth.isFetchingCurrentUser;\r\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nexport const getLogInPending = state => state.auth.logInPending;\r\nexport const getLogInError = state => state.auth.logInError;\r\n\r\nexport const getRegisterPending = state => state.auth.registerPending;\r\nexport const getRegisterError = state => state.auth.registerError;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n"],"sourceRoot":""}