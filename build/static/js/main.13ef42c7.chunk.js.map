{"version":3,"sources":["redux/authorization/authorization-operations.js","redux/authorization/authorization-slice.js","redux/contacts/contacts-reducer.js","redux/store.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","index.js","redux/authorization/authorization-selectors.js","redux/contacts/contacts-actions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","thunkAPI","a","post","response","status","data","rejectWithValue","statusText","message","logIn","logOut","fetchCurrentUser","_","state","getState","persistedToken","auth","get","authSlice","createSlice","name","initialState","user","email","isFetchingCurrentUser","isLoggedIn","registerPending","registerError","logInPending","logInError","logOutPending","extraReducers","pending","fulfilled","action","payload","rejected","items","createReducer","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","isLoading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","contacts","contactsReduser","devTools","process","persistor","persistStore","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","useSelector","getIsLoggedIn","to","PrivateRoute","RegisterForm","lazy","LogInForm","ContactsView","App","getIsFetchingCurrentUser","dispatch","useDispatch","useEffect","Box","sx","marginTop","display","justifyContent","CircularProgress","size","color","fallback","path","exact","ReactDOM","render","StrictMode","loading","document","getElementById","getUserEmail","getLogInPending","getLogInError","getRegisterPending","getRegisterError","getLogOutPending","createAction"],"mappings":"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","file":"static/js/main.13ef42c7.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const response = await axios.post('/users/signup', credentials);\n\n      if (response.status === 201) {\n        token.set(response.data.token);\n        return response.data;\n      }\n\n      return thunkAPI.rejectWithValue(response.statusText);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/logIn',\n  async (credentials, thunkAPI) => {\n    try {\n      const response = await axios.post('users/login', credentials);\n\n      if (response.status === 200) {\n        token.set(response.data.token);\n        return response.data;\n      }\n\n      return thunkAPI.rejectWithValue(response.statusText);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk('auth/logOut', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {}\n});\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n\n    try {\n      const { data } = await axios.get('users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n} from './authorization-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isFetchingCurrentUser: false,\n  isLoggedIn: false,\n  registerPending: false,\n  registerError: null,\n  logInPending: false,\n  logInError: null,\n  logOutPending: false,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.pending](state) {\n      state.registerPending = true;\n      state.registerError = null;\n    },\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.registerPending = false;\n    },\n    [register.rejected](state, action) {\n      state.registerPending = false;\n      state.registerError = action.payload;\n    },\n    [logIn.pending](state) {\n      state.logInPending = true;\n      state.logInError = null;\n    },\n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.logInPending = false;\n    },\n    [logIn.rejected](state, action) {\n      state.logInPending = false;\n      state.logInError = action.payload;\n    },\n    [logOut.pending](state) {\n      state.logOutPending = true;\n    },\n    [logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      state.logOutPending = false;\n    },\n    [logOut.rejected](state) {\n      state.logOutPending = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isFetchingCurrentUser = false;\n      state.isLoggedIn = true;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authSlice } from './authorization/authorization-slice';\nimport contactsReduser from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authSlice.reducer),\n    contacts: contactsReduser,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../redux/authorization/authorization-selectors';\nimport PropTypes from 'prop-types';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n\nPublicRoute.propTypes = {\n  children: PropTypes.element.isRequired,\n  restricted: PropTypes.bool,\n  redirectTo: PropTypes.string,\n};\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../redux/authorization/authorization-selectors';\nimport PropTypes from 'prop-types';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n\nPrivateRoute.propTypes = {\n  children: PropTypes.element.isRequired,\n  redirectTo: PropTypes.string,\n};\n","import { useEffect, Suspense, lazy } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PublicRoute from './components/PublicRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport { getIsFetchingCurrentUser } from './redux/authorization/authorization-selectors';\nimport { fetchCurrentUser } from './redux/authorization/authorization-operations';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst RegisterForm = lazy(() =>\n  import(\n    './components/RegisterForm/RegisterForm' /* webpackChunkName: \"register-form\" */\n  ),\n);\nconst LogInForm = lazy(() =>\n  import(\n    './components/LogInForm/LogInForm' /* webpackChunkName: \"log-in-form\" */\n  ),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */),\n);\n\nconst App = () => {\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrentUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isFetchingCurrentUser ? (\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <CircularProgress size={60} />\n          <CircularProgress size={60} color=\"secondary\" />\n        </Box>\n      ) : (\n        <Suspense\n          fallback={\n            <Box\n              sx={{\n                marginTop: 8,\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <CircularProgress size={60} />\n              <CircularProgress size={60} color=\"secondary\" />\n            </Box>\n          }\n        >\n          <Switch>\n            <PublicRoute path=\"/\" exact restricted redirectTo=\"/contacts\">\n              <RegisterForm />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n              <RegisterForm />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LogInForm />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n\n            <Route>\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const getUserName = state => state.auth.user.name;\n\nexport const getUserEmail = state => state.auth.user.email;\n\nexport const getIsFetchingCurrentUser = state =>\n  state.auth.isFetchingCurrentUser;\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const getLogInPending = state => state.auth.logInPending;\nexport const getLogInError = state => state.auth.logInError;\n\nexport const getRegisterPending = state => state.auth.registerPending;\nexport const getRegisterError = state => state.auth.registerError;\n\nexport const getLogOutPending = state => state.auth.logOutPending;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n"],"sourceRoot":""}