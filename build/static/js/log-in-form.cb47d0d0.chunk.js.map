{"version":3,"sources":["components/LogInForm/LogInForm.js"],"names":["SignIn","dispatch","useDispatch","pending","useSelector","getLogInPending","error","getLogInError","useForm","control","handleSubmit","reset","errors","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","noValidate","width","mt","onSubmit","user","email","password","logIn","name","defaultValue","rules","required","pattern","render","value","onChange","margin","fullWidth","id","label","autoComplete","autoFocus","type","mb","disabled","size","color","container","item","xs","href","severity","open","Boolean","anchorOrigin","vertical","horizontal","autoHideDuration"],"mappings":"gXAsBe,SAASA,IAAU,IAAD,IACzBC,EAAWC,cACXC,EAAUC,YAAYC,KACtBC,EAAQF,YAAYG,KAHK,EAKkBC,cAAzCC,EALuB,EAKvBA,QAASC,EALc,EAKdA,aAAcC,EALA,EAKAA,MAAOC,EALP,EAKOA,OAiBtC,OACE,eAAC,IAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,cAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,qBAGA,eAAC,IAAD,CACET,UAAU,OACVU,YAAU,EACVR,GAAI,CACFS,MAAO,OACPC,GAAI,GAENC,SAAUhB,GArCA,SAAC,GAAyB,IACpCiB,EAAO,CACXC,MAFuC,EAAtBA,MAGjBC,SAHuC,EAAfA,UAM1B5B,EAAS6B,YAAMH,IACfhB,EAAM,CACJiB,MAAO,GACPC,SAAU,QAqBR,UASE,cAAC,IAAD,CACEE,KAAK,QACLtB,QAASA,EACTuB,aAAa,GACbC,MAAO,CACLC,UAAU,EACVC,QA/CQ,6JAiDVC,OAAQ,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACN,cAAC,IAAD,CACEC,OAAO,SACPL,UAAQ,EACRM,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNX,KAAK,QACLY,aAAa,QACbC,WAAS,EACTP,MAAOA,EACPC,SAAUA,OAIhB,cAAC,IAAD,CACEP,KAAK,WACLtB,QAASA,EACTuB,aAAa,GACbC,MAAO,CAAEC,UAAU,GACnBE,OAAQ,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACN,cAAC,IAAD,CACEC,OAAO,SACPL,UAAQ,EACRM,WAAS,EACTT,KAAK,WACLW,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,mBACbN,MAAOA,EACPC,SAAUA,OAKfnC,EACC,eAAC,IAAD,CACE0C,KAAK,SACLL,WAAS,EACTlB,QAAQ,YACRP,GAAI,CAAEU,GAAI,EAAGqB,GAAI,GACjBC,UAAQ,EALV,UAOE,cAAC,IAAD,CAAkBC,KAAM,KACxB,cAAC,IAAD,CAAkBA,KAAM,GAAIC,MAAM,iBAGpC,cAAC,IAAD,CACEJ,KAAK,SACLL,WAAS,EACTlB,QAAQ,YACRP,GAAI,CAAEU,GAAI,EAAGqB,GAAI,GAJnB,qBAUF,eAAC,IAAD,CAAMI,WAAS,EAAf,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,IAAE,IACb,cAAC,IAAD,CAAMD,MAAI,EAAV,SACE,cAAC,IAAD,CAAME,KAAK,YAAY/B,QAAQ,QAA/B,SACG,8CAOa,cAAvB,UAAAV,EAAOgB,aAAP,eAAciB,OACb,cAAC,IAAD,CAAOS,SAAS,QAAhB,wCAEsB,aAAvB,UAAA1C,EAAOgB,aAAP,eAAciB,OACb,cAAC,IAAD,CAAOS,SAAS,QAAhB,yCAGD1C,EAAOiB,UAAY,cAAC,IAAD,CAAOyB,SAAS,QAAhB,mCAEnBhD,GACC,cAAC,IAAD,CACEiD,KAAMC,QAAQlD,GACdmD,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,iBAAkB,IAHpB,SAKE,cAAC,IAAD,CAAON,SAAS,QAAhB","file":"static/js/log-in-form.cb47d0d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logIn } from '../../redux/authorization/authorization-operations';\r\nimport {\r\n  getLogInPending,\r\n  getLogInError,\r\n} from '../../redux/authorization/authorization-selectors';\r\n\r\nexport default function SignIn() {\r\n  const dispatch = useDispatch();\r\n  const pending = useSelector(getLogInPending);\r\n  const error = useSelector(getLogInError);\r\n\r\n  const { control, handleSubmit, reset, errors } = useForm();\r\n  // eslint-disable-next-line no-useless-escape\r\n  const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  const userLogIn = ({ email, password }) => {\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(logIn(user));\r\n    reset({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          sx={{\r\n            width: '100%', // Fix IE11 issue.\r\n            mt: 1,\r\n          }}\r\n          onSubmit={handleSubmit(userLogIn)}\r\n        >\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{\r\n              required: true,\r\n              pattern: emailRegExp,\r\n            }}\r\n            render={({ value, onChange }) => (\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={({ value, onChange }) => (\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {pending ? (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              disabled\r\n            >\r\n              <CircularProgress size={24} />\r\n              <CircularProgress size={24} color=\"secondary\" />\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          )}\r\n\r\n          <Grid container>\r\n            <Grid item xs></Grid>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n\r\n      {errors.email?.type === 'required' && (\r\n        <Alert severity=\"error\">Email Address is required!</Alert>\r\n      )}\r\n      {errors.email?.type === 'pattern' && (\r\n        <Alert severity=\"error\">Email Address is not valid!</Alert>\r\n      )}\r\n\r\n      {errors.password && <Alert severity=\"error\">Password is required!</Alert>}\r\n\r\n      {error && (\r\n        <Snackbar\r\n          open={Boolean(error)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          autoHideDuration={3000}\r\n        >\r\n          <Alert severity=\"error\">Something go wrong!</Alert>\r\n        </Snackbar>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}