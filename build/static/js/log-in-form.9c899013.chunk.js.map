{"version":3,"sources":["components/LogInForm/LogInForm.js"],"names":["SignIn","dispatch","useDispatch","pending","useSelector","getLogInPending","error","getLogInError","useForm","control","handleSubmit","reset","errors","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","noValidate","width","mt","onSubmit","user","email","password","logIn","name","defaultValue","rules","required","pattern","render","value","onChange","margin","fullWidth","id","label","autoComplete","autoFocus","type","mb","disabled","size","color","container","item","xs","href","severity","open","Boolean","anchorOrigin","vertical","horizontal","autoHideDuration"],"mappings":"gXAsBe,SAASA,IAAU,IAAD,IACzBC,EAAWC,cACXC,EAAUC,YAAYC,KACtBC,EAAQF,YAAYG,KAHK,EAKkBC,cAAzCC,EALuB,EAKvBA,QAASC,EALc,EAKdA,aAAcC,EALA,EAKAA,MAAOC,EALP,EAKOA,OAiBtC,OACE,eAAC,IAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,cAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,qBAGA,eAAC,IAAD,CACET,UAAU,OACVU,YAAU,EACVR,GAAI,CACFS,MAAO,OACPC,GAAI,GAENC,SAAUhB,GArCA,SAAC,GAAyB,IACpCiB,EAAO,CACXC,MAFuC,EAAtBA,MAGjBC,SAHuC,EAAfA,UAM1B5B,EAAS6B,YAAMH,IACfhB,EAAM,CACJiB,MAAO,GACPC,SAAU,QAqBR,UASE,cAAC,IAAD,CACEE,KAAK,QACLtB,QAASA,EACTuB,aAAa,GACbC,MAAO,CACLC,UAAU,EACVC,QA/CQ,6JAiDVC,OAAQ,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACN,cAAC,IAAD,CACEC,OAAO,SACPL,UAAQ,EACRM,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNX,KAAK,QACLY,aAAa,QACbC,WAAS,EACTP,MAAOA,EACPC,SAAUA,OAIhB,cAAC,IAAD,CACEP,KAAK,WACLtB,QAASA,EACTuB,aAAa,GACbC,MAAO,CAAEC,UAAU,GACnBE,OAAQ,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACN,cAAC,IAAD,CACEC,OAAO,SACPL,UAAQ,EACRM,WAAS,EACTT,KAAK,WACLW,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,mBACbN,MAAOA,EACPC,SAAUA,OAKfnC,EACC,eAAC,IAAD,CACE0C,KAAK,SACLL,WAAS,EACTlB,QAAQ,YACRP,GAAI,CAAEU,GAAI,EAAGqB,GAAI,GACjBC,UAAQ,EALV,UAOE,cAAC,IAAD,CAAkBC,KAAM,KACxB,cAAC,IAAD,CAAkBA,KAAM,GAAIC,MAAM,iBAGpC,cAAC,IAAD,CACEJ,KAAK,SACLL,WAAS,EACTlB,QAAQ,YACRP,GAAI,CAAEU,GAAI,EAAGqB,GAAI,GAJnB,qBAUF,eAAC,IAAD,CAAMI,WAAS,EAAf,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,IAAE,IACb,cAAC,IAAD,CAAMD,MAAI,EAAV,SACE,cAAC,IAAD,CAAME,KAAK,YAAY/B,QAAQ,QAA/B,SACG,8CAOa,cAAvB,UAAAV,EAAOgB,aAAP,eAAciB,OACb,cAAC,IAAD,CAAOS,SAAS,QAAhB,wCAEsB,aAAvB,UAAA1C,EAAOgB,aAAP,eAAciB,OACb,cAAC,IAAD,CAAOS,SAAS,QAAhB,yCAGD1C,EAAOiB,UAAY,cAAC,IAAD,CAAOyB,SAAS,QAAhB,mCAEnBhD,GACC,cAAC,IAAD,CACEiD,KAAMC,QAAQlD,GACdmD,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,iBAAkB,IAHpB,SAKE,cAAC,IAAD,CAAON,SAAS,QAAhB","file":"static/js/log-in-form.9c899013.chunk.js","sourcesContent":["import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/authorization/authorization-operations';\nimport {\n  getLogInPending,\n  getLogInError,\n} from '../../redux/authorization/authorization-selectors';\n\nexport default function SignIn() {\n  const dispatch = useDispatch();\n  const pending = useSelector(getLogInPending);\n  const error = useSelector(getLogInError);\n\n  const { control, handleSubmit, reset, errors } = useForm();\n  // eslint-disable-next-line no-useless-escape\n  const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const userLogIn = ({ email, password }) => {\n    const user = {\n      email,\n      password,\n    };\n\n    dispatch(logIn(user));\n    reset({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          sx={{\n            width: '100%', // Fix IE11 issue.\n            mt: 1,\n          }}\n          onSubmit={handleSubmit(userLogIn)}\n        >\n          <Controller\n            name=\"email\"\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: true,\n              pattern: emailRegExp,\n            }}\n            render={({ value, onChange }) => (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={value}\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name=\"password\"\n            control={control}\n            defaultValue=\"\"\n            rules={{ required: true }}\n            render={({ value, onChange }) => (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={value}\n                onChange={onChange}\n              />\n            )}\n          />\n\n          {pending ? (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled\n            >\n              <CircularProgress size={24} />\n              <CircularProgress size={24} color=\"secondary\" />\n            </Button>\n          ) : (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          )}\n\n          <Grid container>\n            <Grid item xs></Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n\n      {errors.email?.type === 'required' && (\n        <Alert severity=\"error\">Email Address is required!</Alert>\n      )}\n      {errors.email?.type === 'pattern' && (\n        <Alert severity=\"error\">Email Address is not valid!</Alert>\n      )}\n\n      {errors.password && <Alert severity=\"error\">Password is required!</Alert>}\n\n      {error && (\n        <Snackbar\n          open={Boolean(error)}\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          autoHideDuration={3000}\n        >\n          <Alert severity=\"error\">Something go wrong!</Alert>\n        </Snackbar>\n      )}\n    </Container>\n  );\n}\n"],"sourceRoot":""}